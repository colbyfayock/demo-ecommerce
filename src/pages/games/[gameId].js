import Head from 'next/head'
import Link from 'next/link'

import { useCart } from '../../hooks/use-cart.js';

import Header from '../../components/Header';

import styles from '../../styles/Home.module.scss'

export default function Game({ game }) {

  const { addToCart } = useCart();

  function handleAddToCart() {
    addToCart({
      id: game.id
    });
  }

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Header />

      <main className={styles.main}>
        <div className={`${styles.container} ${styles.productContainer}`}>
          <div className={styles.productImage}>
            <img src={game.image.original_url} alt={`${game.name} Cover`} />
          </div>
          <div className={styles.productDetails}>
            <h1 className={styles.productTitle}>{ game.name }</h1>
            <p className={styles.productDescription}>
              {game.deck}
            </p>
            <p className={styles.productPrice}>
              ${game.price.toFixed(2)}
            </p>
            <p className={styles.productBuy}>
              <button className={styles.productBuyButton} onClick={handleAddToCart}>
                Add to Cart
              </button>
            </p>
          </div>
        </div>
      </main>
    </div>
  )
}

export async function getStaticProps({ params = {} } = {}) {
  const response = await fetch(`https://www.giantbomb.com/api/game/${params.gameId}/?api_key=${process.env.GIANT_BOMB_API_KEY}&format=json&sort=original_release_date:desc&filter=original_release_date:2016-01-01|2021-05-17&platforms=145,146&field_list=name,image,deck,id`);
  const { results } = await response.json();
  return {
    props: {
      game: {
        ...results,
        price: 60
      }
    }
  }
}

export async function getStaticPaths() {
  const response = await fetch(`https://www.giantbomb.com/api/games/?api_key=${process.env.GIANT_BOMB_API_KEY}&format=json&sort=original_release_date:desc&filter=original_release_date:2016-01-01|2021-05-17&platforms=145,146&field_list=id`);
  const { results } = await response.json();

  const paths = results.map(({ id }) => {
    return {
      params: {
        gameId: `${id}`,
      },
    };
  });

  return {
    paths,
    fallback: false,
  };
}